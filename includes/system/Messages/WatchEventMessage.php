<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of WatchEventMessage
 *
 * @author mlee
 */

require_once("Message.php");

class WatchEventMessage extends Message
{
    protected 
            $changed_files_array = null;  // Is an 2-D associative array that holds information on all of the changed files that we passed to us by afrs-watcher.
            
    public function __construct($socket_or_address, $xml_or_command)
    {
        // Extend known list of valid commands to include the 'WATCHEVENT' command.
        $this->commands_array["WATCHEVENT"] = array('WATCHID' => null);
        $this->dialogue_array["WATCHEVENT"] = array("null" => array("WATCHEVENT" => "ACK"),
                                                "WATCHEVENT" => array("ACK" => "BYE", "ERROR" => "ACK"),
                                                "ACK" => array("BYE" => "ACK"),
                                                "BYE" => array("ACK" => "DISCARD"),
                                                "ERROR" => array("ACK" => "BYE"));
        
        parent::__construct($socket_or_address, $xml_or_command);
        
        if ($this->command == "WATCHEVENT")  // If this is a watch event generated by afrs-watcher, then process the files listed in the <filelist></filelist> container.
        {
                $file_list_nodes = $this->doc->getElementsByTagName("filelist"); // Get an array of containing all of the <file></files>.
                $file_list_elements = $file_list_nodes->item(0);
                $changed_file_nodes = $file_list_elements->getElementsByTagName("file");

                for ($i = 0; $i < $changed_file_nodes->length; $i++)
                {
                        $changed_file = $changed_file_nodes->item($i); // Get the the <file></file> element at the specified position.
                        $this->changed_files_array[$i]["DATETIME"] = trim($changed_file->getElementsByTagName("datetime")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["PATH"] = trim($changed_file->getElementsByTagName("path")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["TYPE"] = trim($changed_file->getElementsByTagName("filetype")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["ACTION"] = trim($changed_file->getElementsByTagName("action")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["UID"] = trim($changed_file->getElementsByTagName("uid")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["GID"] = trim($changed_file->getElementsByTagName("gid")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["USER"] = trim($changed_file->getElementsByTagName("user")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["GROUP"] = trim($changed_file->getElementsByTagName("group")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["POSIXPERMISSIONS"] = trim($changed_file->getElementsByTagName("posixpermissions")->item(0)->nodeValue);
                        $this->changed_files_array[$i]["SIZE"] = trim($changed_file->getElementsByTagName("size")->item(0)->nodeValue);
                }
        }
    }
}

?>
